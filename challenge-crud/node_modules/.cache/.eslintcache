[{"C:\\challenge-klever\\challenge-crud\\src\\index.js":"1","C:\\challenge-klever\\challenge-crud\\src\\reportWebVitals.js":"2","C:\\challenge-klever\\challenge-crud\\src\\views\\App.js":"3","C:\\challenge-klever\\challenge-crud\\src\\components\\topbar\\TopBar.js":"4","C:\\challenge-klever\\challenge-crud\\src\\components\\list-students\\ListStudents.js":"5","C:\\challenge-klever\\challenge-crud\\src\\components\\footer\\Footer.js":"6","C:\\challenge-klever\\challenge-crud\\src\\views\\new-student\\NewStudent.js":"7","C:\\challenge-klever\\challenge-crud\\src\\views\\edit-student\\EditStudent.js":"8","C:\\challenge-klever\\challenge-crud\\src\\api.js":"9"},{"size":524,"mtime":1621109255493,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1266,"mtime":1621296484264,"results":"13","hashOfConfig":"11"},{"size":309,"mtime":1620948957555,"results":"14","hashOfConfig":"11"},{"size":2606,"mtime":1621277619391,"results":"15","hashOfConfig":"11"},{"size":237,"mtime":1621037404449,"results":"16","hashOfConfig":"11"},{"size":3525,"mtime":1621302694510,"results":"17","hashOfConfig":"11"},{"size":3646,"mtime":1621294004654,"results":"18","hashOfConfig":"11"},{"size":152,"mtime":1621225712580,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c35q1s",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\challenge-klever\\challenge-crud\\src\\index.js",[],["41","42"],"C:\\challenge-klever\\challenge-crud\\src\\reportWebVitals.js",[],"C:\\challenge-klever\\challenge-crud\\src\\views\\App.js",[],"C:\\challenge-klever\\challenge-crud\\src\\components\\topbar\\TopBar.js",[],"C:\\challenge-klever\\challenge-crud\\src\\components\\list-students\\ListStudents.js",["43"],"import '../../assets/css/App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport mockStudents from '../../api';\r\nimport React, {Component} from 'react'\r\n\r\n\r\n\r\nclass ListStudents extends Component {\r\n\r\n  state= {\r\n    students: [],\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const response = await mockStudents.get('');\r\n    this.setState({ students: response.data });\r\n  }\r\n\r\n  getStudent(id) {\r\n    return mockStudents.get(`/${id}`);\r\n  }\r\n\r\n \r\n  render(){\r\n\r\n    const { students } = this.state;\r\n    return ( \r\n \r\n    <div className=\"container-fluid\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header\"> \r\n            <h2 className=\"title-table\">List Of Students</h2>\r\n            <Link className=\"btn btn-success btn-round pull-right bt-add\" to=\"/new-student\">New Student</Link>\r\n        </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table\">\r\n                      <thead className=\"text-dark\">\r\n                        <tr>\r\n                          <th>ID</th>\r\n                          <th>Name</th>\r\n                          <th>Age</th>\r\n                          <th>Weight(KG)</th>\r\n                          <th>Height(M)</th>\r\n                          <th>Edit</th>\r\n                          <th>Remove</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                            {students.map(student => (\r\n                                <tr key={student.id}>\r\n                                <td>{student.id}</td>\r\n                                <td>{student.name}</td>\r\n                                <td>{student.age}</td>\r\n                                <td>{student.weight}</td>\r\n                                <td>{student.height}</td>\r\n                                <td key=\"edit\">\r\n                                <Link className=\"btn btn-info btn-round bt-edit\"\r\n                                to={\"/edit-student/\" + student.id}>Edit</Link> \r\n                                </td>\r\n                                <td name=\"remove\">\r\n                                <a className=\"btn btn-danger btn-round bt-remove\"\r\n                                href=\"#\">Remove</a> \r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    ); \r\n  }\r\n\r\n} export default ListStudents\r\n\r\n","C:\\challenge-klever\\challenge-crud\\src\\components\\footer\\Footer.js",[],"C:\\challenge-klever\\challenge-crud\\src\\views\\new-student\\NewStudent.js",[],"C:\\challenge-klever\\challenge-crud\\src\\views\\edit-student\\EditStudent.js",["44","45"],"import '../../assets/css/App.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ListStudents from '../../components/list-students/ListStudents';\r\n\r\n\r\n\r\nclass EditStudent extends Component {\r\n  \r\n  state = {\r\n    id: '',\r\n    name:'',\r\n    age:'',\r\n    weight:'',\r\n    height:''\r\n\r\n  }\r\n\r\n  getStudentbyId(id) {\r\n    ListStudents.getStudent(id)\r\n      .then(response => {\r\n        this.setState({\r\n           id: response.data\r\n        });\r\n        console.log(response);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  getData = event => {\r\n\r\n    if(event.target.id === 'name') {\r\n      this.setState({\r\n        name: this.state.name,\r\n      });\r\n    }\r\n\r\n    if(event.target.id === 'age'){\r\n      this.setState({\r\n        age: this.state.value,\r\n      });\r\n    }\r\n\r\n    if(event.target.id === 'weight'){\r\n      this.setState({\r\n        weight: this.state.value,\r\n      });\r\n    }\r\n\r\n    if(event.target.id === 'height'){\r\n      this.setState({\r\n        height: this.state.value,\r\n      });\r\n    }\r\n};\r\n\r\n  updateStudent = event =>{\r\n    event.preventDefault();\r\n\r\n    const student = {\r\n      name:this.state.name,\r\n      age:this.state.age,\r\n      weight:this.state.weight,\r\n      height:this.state.height\r\n\r\n\r\n    }\r\n    axios.put('http://localhost:5000/students', student)\r\n    .then (response => {\r\n        console.log(response.data)\r\n        \r\n    })\r\n   \r\n  };\r\n\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                  <div className=\"card-header\"> \r\n                  <h2 className=\"title-table\">Edit Student</h2>\r\n              </div>\r\n                  <div className=\"card-body\">\r\n                      <form onSubmit={this.updateStudent}>\r\n                      <div className=\"row form-group\" onChange={this.getData}>\r\n\r\n                          <div className=\"col-md-6\">\r\n                            <label className=\"pull-left label-txt\" htmlFor=\"name\">Name: </label>\r\n                            <input className=\"form-control\" id=\"name\" type=\"text\" name=\"studentName\"/>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <label className=\"pull-left label-txt\" htmlFor=\"age\">Age: </label>\r\n                            <input className=\"form-control\" id=\"age\" name=\"age\" type=\"text\"/>\r\n                          </div>\r\n\r\n                          </div>\r\n                          <div className=\"row form-group\" onChange={this.getData}>\r\n\r\n                          <div className=\"col-md-6\">\r\n                            <label className=\"pull-left label-txt\" htmlFor=\"weight\">Weight (KG): </label>\r\n                            <input className=\"form-control\" id=\"weight\" name=\"weight\" type=\"text\"/>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <label className=\"pull-left label-txt\" htmlFor=\"height\">Height (M): </label>\r\n                            <input className=\"form-control\" id=\"height\" name=\"height\" type=\"text\"/>\r\n                          </div>\r\n\r\n                          </div>\r\n                            <Link className=\"btn btn-secondary btn-round pull-left bt-back\" to=\"/\">Return</Link>\r\n                            <a className=\"btn btn-success btn-round pull-right bt-add\" href=\"#\">Save</a>\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} export default EditStudent;\r\n","C:\\challenge-klever\\challenge-crud\\src\\api.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":63,"column":33,"nodeType":"52","endLine":64,"endColumn":42},{"ruleId":"53","severity":1,"message":"54","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":117,"column":29,"nodeType":"52","endLine":117,"endColumn":97},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]